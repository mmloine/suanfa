二叉树知识点：
    度为1个节点 n1
    度为2的节点 n2
    度为0的节点 n0  （称作叶子）
    总节点数： n
    边数： t

    []每个节点的度最大为2
    []左子树和右字树是严格区分的
    []即使只有子树也是严格区分左右子树的
    []二叉树是有顺序的  有序树

    []非空二叉树的第i层的节点  最多只有  2^(i-1)次方 个节点
    []在高度为h的二叉树上  最多只有    (2^h)-1 个节点
        推导:     n = 2^0 + 2^1 +2^2 + 2^3 +.....+2^(h-1)
                 n = (2^h)-1

    []对于任意一个非空二叉树 都有 n0 = n2 +1
        推导：   n = n0+n1+n2
                t = n-1 = n0 + n1 + n2 -1 （就是总节点数-1）
                t = n1 + 2 * n2
                n1 + 2 * n2 = n0 + n1 + n2 -1
                n0 = n2 +1

    []对于任意一个非空二叉树   叶子数量为   (n+1-n1)/2
       推导:   n0 = n2 +1
               n = n0 +n1 +n2
               n = n0+n1+n0-1
               n0 = (n+1-n1)/2
        对于真二叉树   n1=0      n0=(n+1)/2
        对于完全二叉树   n1=0或者1    n0=(n+1)/2  或者  n0=n/2
                       整合  n0=floor((n+1)/2)     floor是向下取整
                       变成代码就是  n0=(n+1)>>2   默认向下取整